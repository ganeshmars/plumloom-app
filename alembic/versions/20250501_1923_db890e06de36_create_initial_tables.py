"""Create initial tables

Revision ID: db890e06de36
Revises: 
Create Date: 2025-05-01 19:23:11.801202+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'db890e06de36'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('company_name', sa.String(), nullable=True),
    sa.Column('tax_id', sa.String(), nullable=True),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('billing_address', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('shipping_address', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('language', sa.String(), nullable=False),
    sa.Column('notification_preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('stripe_event_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Complete JSON data from Stripe events, including customer creation and metadata'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_customer_id')
    )
    op.create_index('ix_customers_email', 'customers', ['email'], unique=False)
    op.create_index('ix_customers_status', 'customers', ['status'], unique=False)
    op.create_index('ix_customers_stripe_customer_id', 'customers', ['stripe_customer_id'], unique=False)
    op.create_index('ix_customers_tenant_email_unique', 'customers', ['tenant_id', 'email'], unique=True)
    op.create_index('ix_customers_tenant_id', 'customers', ['tenant_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('descope_user_id', sa.String(), nullable=True),
    sa.Column('login_ids', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('is_email_verified', sa.Boolean(), nullable=True),
    sa.Column('is_phone_verified', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('given_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('family_name', sa.String(), nullable=True),
    sa.Column('tenants', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('roles', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('user_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('logout_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('consent_expiration', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_test_user', sa.Boolean(), nullable=True),
    sa.Column('picture', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index('ix_users_descope_user_id', 'users', ['descope_user_id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_index('ix_users_phone', 'users', ['phone'], unique=False)
    op.create_index('ix_users_status', 'users', ['status'], unique=False)
    op.create_table('icons',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.Enum('APP', 'USER', name='icontype'), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('mode', sa.Enum('LIGHT', 'DARK', 'UNIVERSAL', name='iconmode'), nullable=False),
    sa.Column('gcs_path', sa.String(length=500), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('file_format', sa.Enum('SVG', 'PNG', 'WEBP', 'JPG', 'GIF', name='iconformat'), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_icons_mode', 'icons', ['mode'], unique=False)
    op.create_index('ix_icons_type_user_id', 'icons', ['type', 'user_id'], unique=False)
    op.create_table('payment_methods',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('stripe_payment_method_id', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('payment_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('stripe_event_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_payment_methods_is_default', 'payment_methods', ['is_default'], unique=False)
    op.create_index('ix_payment_methods_stripe_payment_method_id', 'payment_methods', ['stripe_payment_method_id'], unique=True)
    op.create_index('ix_payment_methods_type', 'payment_methods', ['type'], unique=False)
    op.create_index('ix_payment_methods_user_id', 'payment_methods', ['user_id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('payment_intent', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('payment_metadata', sa.JSON(), nullable=True),
    sa.Column('stripe_event_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_payments_payment_intent', 'payments', ['payment_intent'], unique=True)
    op.create_index('ix_payments_status', 'payments', ['status'], unique=False)
    op.create_index('ix_payments_stripe_customer_id', 'payments', ['stripe_customer_id'], unique=False)
    op.create_index('ix_payments_user_id', 'payments', ['user_id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(), nullable=False),
    sa.Column('plan_id', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('current_period_start', sa.DateTime(), nullable=False),
    sa.Column('current_period_end', sa.DateTime(), nullable=False),
    sa.Column('cancel_at', sa.DateTime(), nullable=True),
    sa.Column('canceled_at', sa.DateTime(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=True),
    sa.Column('cancellation_reason', sa.String(), nullable=True),
    sa.Column('cancellation_feedback', sa.String(), nullable=True),
    sa.Column('cancellation_comment', sa.String(), nullable=True),
    sa.Column('trial_start', sa.DateTime(), nullable=True),
    sa.Column('trial_end', sa.DateTime(), nullable=True),
    sa.Column('price_id', sa.String(), nullable=False),
    sa.Column('price_amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('interval', sa.String(), nullable=False),
    sa.Column('is_trial', sa.Boolean(), nullable=True),
    sa.Column('features', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('stripe_event_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_subscriptions_status', 'subscriptions', ['status'], unique=False)
    op.create_index('ix_subscriptions_stripe_subscription_id', 'subscriptions', ['stripe_subscription_id'], unique=True)
    op.create_index('ix_subscriptions_user_id', 'subscriptions', ['user_id'], unique=False)
    op.create_table('templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('icon_url', sa.String(), nullable=True),
    sa.Column('content_url', sa.String(), nullable=True),
    sa.Column('is_custom', sa.Boolean(), nullable=False),
    sa.Column('category', sa.Enum('BUSINESS_PLANNING', 'PRODUCT_MANAGEMENT', 'HEALTHCARE', 'SOFTWARE_IT', 'CONTENT_CREATION_MARKETING', 'PERSONAL_PRODUCTIVITY', 'FINANCE_OPERATIONS', 'PRODUCT_OPERATIONS', 'CUSTOMER_SUPPORT', 'MY_TEMPLATE', name='template_category'), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_templates_created_at', 'templates', ['created_at'], unique=False)
    op.create_index('ix_templates_title', 'templates', ['title'], unique=False)
    op.create_index('ix_templates_updated_at', 'templates', ['updated_at'], unique=False)
    op.create_index('ix_templates_user_id', 'templates', ['user_id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('view_mode', sa.Enum('LIGHT', 'DARK', name='thememode'), server_default='LIGHT', nullable=False, comment='User preferred theme mode'),
    sa.Column('display_options', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='Display settings like theme, density, font size'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='Additional metadata for user preferences'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_preferences_user_id', 'user_preferences', ['user_id'], unique=False)
    op.create_table('workspaces',
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('icon_url', sa.String(), nullable=True),
    sa.Column('cover_image_url', sa.String(), nullable=True),
    sa.Column('workspace_type', sa.String(), nullable=True),
    sa.Column('panel_state', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('workspace_id')
    )
    op.create_index('ix_workspaces_name', 'workspaces', ['name'], unique=False)
    op.create_index('ix_workspaces_user_id', 'workspaces', ['user_id'], unique=False)
    op.create_table('chat_conversations',
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('conversation_title', sa.String(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('conversation_status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.workspace_id'], ),
    sa.PrimaryKeyConstraint('conversation_id')
    )
    op.create_index(op.f('ix_chat_conversations_conversation_status'), 'chat_conversations', ['conversation_status'], unique=False)
    op.create_index('ix_chat_conversations_started_at', 'chat_conversations', ['started_at'], unique=False)
    op.create_index('ix_chat_conversations_updated_at', 'chat_conversations', ['updated_at'], unique=False)
    op.create_index('ix_chat_conversations_user_id', 'chat_conversations', ['user_id'], unique=False)
    op.create_index('ix_chat_conversations_workspace_id', 'chat_conversations', ['workspace_id'], unique=False)
    op.create_table('documents',
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content_file_path', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('icon_url', sa.String(), nullable=True),
    sa.Column('cover_url', sa.String(), nullable=True),
    sa.Column('last_viewed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['documents.document_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.workspace_id'], ),
    sa.PrimaryKeyConstraint('document_id')
    )
    op.create_index('ix_documents_created_at', 'documents', ['created_at'], unique=False)
    op.create_index('ix_documents_last_viewed_at', 'documents', ['last_viewed_at'], unique=False)
    op.create_index('ix_documents_parent_id', 'documents', ['parent_id'], unique=False)
    op.create_index('ix_documents_title', 'documents', ['title'], unique=False)
    op.create_index('ix_documents_updated_at', 'documents', ['updated_at'], unique=False)
    op.create_index('ix_documents_user_id', 'documents', ['user_id'], unique=False)
    op.create_index('ix_documents_workspace_id', 'documents', ['workspace_id'], unique=False)
    op.create_table('invoices',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('subscription_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('stripe_invoice_id', sa.String(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('invoice_pdf_url', sa.String(), nullable=True),
    sa.Column('hosted_invoice_url', sa.String(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('period_start', sa.DateTime(), nullable=False),
    sa.Column('period_end', sa.DateTime(), nullable=False),
    sa.Column('is_paid', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('stripe_event_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_invoices_status', 'invoices', ['status'], unique=False)
    op.create_index('ix_invoices_stripe_invoice_id', 'invoices', ['stripe_invoice_id'], unique=True)
    op.create_index('ix_invoices_subscription_id', 'invoices', ['subscription_id'], unique=False)
    op.create_index('ix_invoices_user_id', 'invoices', ['user_id'], unique=False)
    op.create_table('uploaded_documents',
    sa.Column('uploaded_document_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('chat_conversation_id', sa.UUID(), nullable=True),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('file_type', sa.String(), nullable=False),
    sa.Column('file_size_bytes', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processing_status', sa.String(), nullable=False),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('vector_chunks_count', sa.Integer(), nullable=True),
    sa.Column('vector_status', sa.String(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.workspace_id'], ),
    sa.PrimaryKeyConstraint('uploaded_document_id')
    )
    op.create_index('ix_uploaded_documents_chat_conversation_id', 'uploaded_documents', ['chat_conversation_id'], unique=False)
    op.create_index('ix_uploaded_documents_file_name', 'uploaded_documents', ['file_name'], unique=False)
    op.create_index('ix_uploaded_documents_file_type', 'uploaded_documents', ['file_type'], unique=False)
    op.create_index('ix_uploaded_documents_is_processed', 'uploaded_documents', ['is_processed'], unique=False)
    op.create_index('ix_uploaded_documents_processing_status', 'uploaded_documents', ['processing_status'], unique=False)
    op.create_index('ix_uploaded_documents_uploaded_at', 'uploaded_documents', ['uploaded_at'], unique=False)
    op.create_index('ix_uploaded_documents_user_id', 'uploaded_documents', ['user_id'], unique=False)
    op.create_index('ix_uploaded_documents_vector_status', 'uploaded_documents', ['vector_status'], unique=False)
    op.create_index('ix_uploaded_documents_workspace_id', 'uploaded_documents', ['workspace_id'], unique=False)
    op.create_table('charges',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('subscription_id', sa.String(), nullable=True),
    sa.Column('invoice_id', sa.String(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('amount_refunded', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('refunded', sa.Boolean(), nullable=False),
    sa.Column('stripe_charge_id', sa.String(), nullable=False),
    sa.Column('stripe_event_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_charges_invoice_id', 'charges', ['invoice_id'], unique=False)
    op.create_index('ix_charges_status', 'charges', ['status'], unique=False)
    op.create_index('ix_charges_stripe_charge_id', 'charges', ['stripe_charge_id'], unique=True)
    op.create_index('ix_charges_subscription_id', 'charges', ['subscription_id'], unique=False)
    op.create_index('ix_charges_user_id', 'charges', ['user_id'], unique=False)
    op.create_table('chat_messages',
    sa.Column('message_id', sa.UUID(), nullable=False),
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('sender_type', sa.Enum('USER', 'AI', 'SYSTEM', name='sender_type_enum', create_constraint=True), nullable=False),
    sa.Column('sender_user_id', sa.String(), nullable=True),
    sa.Column('message_content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('message_type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['chat_conversations.conversation_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_index(op.f('ix_chat_messages_conversation_id'), 'chat_messages', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_chat_messages_sender_type'), 'chat_messages', ['sender_type'], unique=False)
    op.create_index(op.f('ix_chat_messages_sender_user_id'), 'chat_messages', ['sender_user_id'], unique=False)
    op.create_index(op.f('ix_chat_messages_timestamp'), 'chat_messages', ['timestamp'], unique=False)
    op.create_table('document_versions',
    sa.Column('version_id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('content_file_path', sa.String(), nullable=True),
    sa.Column('saved_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.document_id'], ),
    sa.PrimaryKeyConstraint('version_id'),
    sa.UniqueConstraint('document_id', 'version_number', name='uix_document_version')
    )
    op.create_index('ix_document_versions_document_id', 'document_versions', ['document_id'], unique=False)
    op.create_index('ix_document_versions_saved_at', 'document_versions', ['saved_at'], unique=False)
    op.create_table('refunds',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('subscription_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('stripe_refund_id', sa.String(), nullable=False),
    sa.Column('stripe_charge_id', sa.String(), nullable=False),
    sa.Column('charge_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('stripe_event_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['charge_id'], ['charges.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_refunds_charge_id', 'refunds', ['charge_id'], unique=False)
    op.create_index('ix_refunds_status', 'refunds', ['status'], unique=False)
    op.create_index('ix_refunds_stripe_charge_id', 'refunds', ['stripe_charge_id'], unique=False)
    op.create_index('ix_refunds_stripe_refund_id', 'refunds', ['stripe_refund_id'], unique=True)
    op.create_index('ix_refunds_subscription_id', 'refunds', ['subscription_id'], unique=False)
    op.create_index('ix_refunds_user_id', 'refunds', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_refunds_user_id', table_name='refunds')
    op.drop_index('ix_refunds_subscription_id', table_name='refunds')
    op.drop_index('ix_refunds_stripe_refund_id', table_name='refunds')
    op.drop_index('ix_refunds_stripe_charge_id', table_name='refunds')
    op.drop_index('ix_refunds_status', table_name='refunds')
    op.drop_index('ix_refunds_charge_id', table_name='refunds')
    op.drop_table('refunds')
    op.drop_index('ix_document_versions_saved_at', table_name='document_versions')
    op.drop_index('ix_document_versions_document_id', table_name='document_versions')
    op.drop_table('document_versions')
    op.drop_index(op.f('ix_chat_messages_timestamp'), table_name='chat_messages')
    op.drop_index(op.f('ix_chat_messages_sender_user_id'), table_name='chat_messages')
    op.drop_index(op.f('ix_chat_messages_sender_type'), table_name='chat_messages')
    op.drop_index(op.f('ix_chat_messages_conversation_id'), table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index('ix_charges_user_id', table_name='charges')
    op.drop_index('ix_charges_subscription_id', table_name='charges')
    op.drop_index('ix_charges_stripe_charge_id', table_name='charges')
    op.drop_index('ix_charges_status', table_name='charges')
    op.drop_index('ix_charges_invoice_id', table_name='charges')
    op.drop_table('charges')
    op.drop_index('ix_uploaded_documents_workspace_id', table_name='uploaded_documents')
    op.drop_index('ix_uploaded_documents_vector_status', table_name='uploaded_documents')
    op.drop_index('ix_uploaded_documents_user_id', table_name='uploaded_documents')
    op.drop_index('ix_uploaded_documents_uploaded_at', table_name='uploaded_documents')
    op.drop_index('ix_uploaded_documents_processing_status', table_name='uploaded_documents')
    op.drop_index('ix_uploaded_documents_is_processed', table_name='uploaded_documents')
    op.drop_index('ix_uploaded_documents_file_type', table_name='uploaded_documents')
    op.drop_index('ix_uploaded_documents_file_name', table_name='uploaded_documents')
    op.drop_index('ix_uploaded_documents_chat_conversation_id', table_name='uploaded_documents')
    op.drop_table('uploaded_documents')
    op.drop_index('ix_invoices_user_id', table_name='invoices')
    op.drop_index('ix_invoices_subscription_id', table_name='invoices')
    op.drop_index('ix_invoices_stripe_invoice_id', table_name='invoices')
    op.drop_index('ix_invoices_status', table_name='invoices')
    op.drop_table('invoices')
    op.drop_index('ix_documents_workspace_id', table_name='documents')
    op.drop_index('ix_documents_user_id', table_name='documents')
    op.drop_index('ix_documents_updated_at', table_name='documents')
    op.drop_index('ix_documents_title', table_name='documents')
    op.drop_index('ix_documents_parent_id', table_name='documents')
    op.drop_index('ix_documents_last_viewed_at', table_name='documents')
    op.drop_index('ix_documents_created_at', table_name='documents')
    op.drop_table('documents')
    op.drop_index('ix_chat_conversations_workspace_id', table_name='chat_conversations')
    op.drop_index('ix_chat_conversations_user_id', table_name='chat_conversations')
    op.drop_index('ix_chat_conversations_updated_at', table_name='chat_conversations')
    op.drop_index('ix_chat_conversations_started_at', table_name='chat_conversations')
    op.drop_index(op.f('ix_chat_conversations_conversation_status'), table_name='chat_conversations')
    op.drop_table('chat_conversations')
    op.drop_index('ix_workspaces_user_id', table_name='workspaces')
    op.drop_index('ix_workspaces_name', table_name='workspaces')
    op.drop_table('workspaces')
    op.drop_index('ix_user_preferences_user_id', table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index('ix_templates_user_id', table_name='templates')
    op.drop_index('ix_templates_updated_at', table_name='templates')
    op.drop_index('ix_templates_title', table_name='templates')
    op.drop_index('ix_templates_created_at', table_name='templates')
    op.drop_table('templates')
    op.drop_index('ix_subscriptions_user_id', table_name='subscriptions')
    op.drop_index('ix_subscriptions_stripe_subscription_id', table_name='subscriptions')
    op.drop_index('ix_subscriptions_status', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index('ix_payments_user_id', table_name='payments')
    op.drop_index('ix_payments_stripe_customer_id', table_name='payments')
    op.drop_index('ix_payments_status', table_name='payments')
    op.drop_index('ix_payments_payment_intent', table_name='payments')
    op.drop_table('payments')
    op.drop_index('ix_payment_methods_user_id', table_name='payment_methods')
    op.drop_index('ix_payment_methods_type', table_name='payment_methods')
    op.drop_index('ix_payment_methods_stripe_payment_method_id', table_name='payment_methods')
    op.drop_index('ix_payment_methods_is_default', table_name='payment_methods')
    op.drop_table('payment_methods')
    op.drop_index('ix_icons_type_user_id', table_name='icons')
    op.drop_index('ix_icons_mode', table_name='icons')
    op.drop_table('icons')
    op.drop_index('ix_users_status', table_name='users')
    op.drop_index('ix_users_phone', table_name='users')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_descope_user_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_customers_tenant_id', table_name='customers')
    op.drop_index('ix_customers_tenant_email_unique', table_name='customers')
    op.drop_index('ix_customers_stripe_customer_id', table_name='customers')
    op.drop_index('ix_customers_status', table_name='customers')
    op.drop_index('ix_customers_email', table_name='customers')
    op.drop_table('customers')
    # ### end Alembic commands ###
